# Nginx Configuration for GA Tech Reddit System
# Optimized for Fly.io deployment with $5/month budget constraints
# Features: SPA routing, compression, caching, security headers

# Run as nginx user (non-root for security)
user nginx;

# Worker processes - auto-detect based on CPU cores
# For shared-cpu-1x on Fly.io, this will be 1
worker_processes auto;

# Error log configuration
error_log /var/log/nginx/error.log warn;

# PID file location
pid /var/run/nginx.pid;

# Events block - connection processing configuration
events {
    # Maximum connections per worker
    # Conservative for 256MB RAM constraint
    worker_connections 512;

    # Optimize for Linux
    use epoll;

    # Accept multiple connections at once
    multi_accept on;
}

# HTTP block - main configuration
http {
    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format - combined with performance metrics
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    # Access log
    access_log /var/log/nginx/access.log main buffer=16k;

    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    types_hash_max_size 2048;
    server_tokens off;  # Hide nginx version

    # Timeouts - adjusted for slow connections
    keepalive_timeout 65;
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;

    # Request limits - prevent abuse
    client_body_buffer_size 16K;
    client_header_buffer_size 1k;
    client_max_body_size 2M;  # Limit file uploads
    large_client_header_buffers 2 1k;

    # Gzip Compression - critical for performance
    gzip on;
    gzip_vary on;
    gzip_min_length 256;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/rss+xml
        application/atom+xml
        image/svg+xml
        text/x-js
        text/x-cross-domain-policy
        application/x-font-ttf
        application/x-font-opentype
        application/vnd.ms-fontobject
        image/x-icon
        application/wasm
        application/manifest+json;
    gzip_disable "msie6";

    # Brotli compression (if available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml application/atom+xml image/svg+xml;

    # File handle cache for better performance
    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # Rate limiting zones (prevent abuse)
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # Server block - main application
    server {
        # Listen on port 8080 (Fly.io standard)
        listen 8080 default_server;
        listen [::]:8080 default_server;

        # Server name
        server_name gatech-reddit.fly.dev localhost;

        # Document root
        root /usr/share/nginx/html;
        index index.html;

        # Charset
        charset utf-8;

        # Rate limiting
        limit_req zone=general burst=20 nodelay;
        limit_conn addr 10;

        # Security Headers
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

        # Content Security Policy - adjust as needed
        add_header Content-Security-Policy "default-src 'self' https:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://*.supabase.co; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com data:; img-src 'self' data: https: blob:; connect-src 'self' https://*.supabase.co https://api.github.com wss://*.supabase.co; frame-ancestors 'none';" always;

        # Health check endpoint
        location = /health {
            access_log off;
            add_header Content-Type text/plain;
            return 200 "OK";
        }

        # Metrics endpoint (internal only)
        location = /metrics {
            allow 127.0.0.1;
            deny all;
            access_log off;
            stub_status;
        }

        # Service Worker - no cache
        location = /service-worker.js {
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
            add_header Service-Worker-Allowed "/";
            try_files $uri =404;
        }

        # SW Register - no cache
        location = /sw-register.js {
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
            try_files $uri =404;
        }

        # Manifest file - short cache
        location = /manifest.json {
            add_header Cache-Control "public, max-age=3600";
            try_files $uri =404;
        }

        # Environment config - no cache
        location = /js/env-config.js {
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
            try_files $uri =404;
        }

        # Static assets - long cache
        location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|otf|eot)$ {
            # Skip env-config.js from caching
            if ($request_filename ~ "env-config\.js$") {
                add_header Cache-Control "no-cache, no-store, must-revalidate";
                add_header Pragma "no-cache";
                add_header Expires "0";
                break;
            }

            # Long cache for other static assets
            expires 1y;
            add_header Cache-Control "public, immutable";

            # Enable gzip for static files
            gzip_static on;

            # Serve pre-compressed files if they exist
            try_files $uri.gz $uri =404;
        }

        # CSS files - medium cache
        location ~* \.css$ {
            expires 7d;
            add_header Cache-Control "public, max-age=604800";
            gzip_static on;
            try_files $uri =404;
        }

        # JavaScript files - medium cache
        location ~* \.js$ {
            # Skip env-config.js and service worker
            if ($request_filename ~ "(env-config|service-worker|sw-register)\.js$") {
                add_header Cache-Control "no-cache, no-store, must-revalidate";
                expires 0;
                break;
            }

            expires 7d;
            add_header Cache-Control "public, max-age=604800";
            gzip_static on;
            try_files $uri =404;
        }

        # HTML files - short cache
        location ~* \.html$ {
            expires 5m;
            add_header Cache-Control "public, max-age=300, must-revalidate";
            try_files $uri =404;
        }

        # SPA fallback - all routes go to index.html
        location / {
            # First, try to serve request as file, then as directory
            try_files $uri $uri/ @spa;

            # Short cache for HTML
            expires 5m;
            add_header Cache-Control "public, max-age=300, must-revalidate";
        }

        # SPA fallback handler
        location @spa {
            # Rewrite everything to index.html
            rewrite ^.*$ /index.html last;
        }

        # API proxy (if needed in future for Supabase)
        # Uncomment and configure if you need to proxy API calls
        # location /api/ {
        #     proxy_pass https://your-project.supabase.co/;
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection 'upgrade';
        #     proxy_set_header Host $host;
        #     proxy_cache_bypass $http_upgrade;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        #
        #     # Rate limiting for API
        #     limit_req zone=api burst=30 nodelay;
        # }

        # WebSocket support (for Supabase realtime)
        # Uncomment if using Supabase realtime features
        # location /realtime/ {
        #     proxy_pass https://your-project.supabase.co/realtime/;
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection "upgrade";
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        #     proxy_read_timeout 86400;
        # }

        # Deny access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Deny access to backup files
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Custom error pages
        error_page 404 /404.html;
        location = /404.html {
            internal;
            # If 404.html doesn't exist, use offline.html
            try_files /404.html /offline.html /index.html;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            internal;
            # If 50x.html doesn't exist, use offline.html
            try_files /50x.html /offline.html /index.html;
        }
    }

    # Redirect server block (if using custom domain in future)
    # server {
    #     listen 8080;
    #     server_name www.gatech-reddit.fly.dev;
    #     return 301 https://gatech-reddit.fly.dev$request_uri;
    # }
}